items:
- uid: msipcthin2.customprotectedinputstream_class_java
  id: CustomProtectedInputStream
  parent: com.microsoft.rightsmanagement
  children:
  - msipcthin2.customprotectedinputstream_create_method_java
  - msipcthin2.customprotectedinputstream_create_synchronous_method_java
  - msipcthin2.customprotectedinputstream_getuserpolicy_method_java
  href: CustomProtectedInputStream.yml
  langs:
  - cplusplus
  name: CustomProtectedInputStream
  fullName: msipcthin2.customprotectedinputstream_class_java
  type: Class
  assemblies: &o0
  - Android
  namespace: com.microsoft.rightsmanagement
  summary: >+
    Implements a custom protected input stream.







  remarks: 
  thread_safety: Members of this class are not guaranteed to be thread safe.
  defined_in: CustomProtectedInputStream.java
  syntax:
    content: public class CustomProtectedInputStream extends InputStream
  inheritance: []
- uid: msipcthin2.customprotectedinputstream_create_method_java
  id: CustomProtectedInputStream.create
  parent: msipcthin2.customprotectedinputstream_class_java
  children: []
  href: CustomProtectedInputStream.yml
  langs:
  - cplusplus
  name: CustomProtectedInputStream.create
  fullName: msipcthin2.customprotectedinputstream_create_method_java
  type: Method
  assemblies: *o0
  namespace: com.microsoft.rightsmanagement
  summary: >+
    Creates an InputStream for reading protected content.







    Opens the specified serialized policy and creates a protected stream that can be used to decipher the actual content. For more information, see the *Remarks* section of this topic.



  remarks: "This method is asynchronous because it may require server / client communication. Your app specifies a  current stream offset to *protectedContentLength* where the encrypted content is located in the backing stream. \r\n\r\nIf the range defined by the parameters current stream offset to *protectedContentLength* is not empty (i.e., *protectedContentLength* != 0), it must address an entire segment of encrypted content (i.e. it must start from block 0 (zero) and must have a final\r\n\r\nThe *protectedContentLength* parameter is needed only for the cases when there is a non-encrypted app specific content after the encrypted content (Multiple segments of protected data). When deciphering it, we need to know where the encrypted content ends. The *protectedContentLength* parameter is specified in terms of the encrypted content, i.e. it includes the size of the CBC padding. \r\n\r\nYour app can use @msipcthin2.customprotectedoutputstream_getencryptedcontentlength_method_java to determine the size of the encrypted content given the size of the original content.\r\n\r\n\r\n\r\n"
  syntax:
    content: public static IAsyncControl create(UserPolicy userPolicy,                                       InputStream inputStream,                                       long protectedContentLength,                                       CreationCallback<CustomProtectedInputStream> callback)            throws InvalidParameterException
    parameters:
    - id: '*userPolicy*'
      type: '@msipcthin2.userpolicy_class_java'
      description: 
    - id: '*inputStream*'
      type: '**InputStream**'
      description: >+
        The input stream with the protected content.



        The next bytes of available data in *inputStream* (i.e., those returned via the next call to inputStream.Read()) should contain the beginning of the stream's protected content.  *inputStream* should have *protectedContentLength* bytes of contiguous protected content available.



    - id: '*protectedContentLength*'
      type: '**long**'
      description: 
    - id: '*callback*'
      type: 'CreationCallback&lt;@msipcthin2.customprotectedinputstream_class_java&gt;&gt;       '
      description: 
    return:
      type: '@msipcthin2.iasynccontrol_interface'
      description: '@msipcthin2.iasynccontrol_interface if an async operation is in progress else null is returned. '
  inheritance: []
- uid: msipcthin2.customprotectedinputstream_create_synchronous_method_java
  id: CustomProtectedInputStream.create synchronous
  parent: msipcthin2.customprotectedinputstream_class_java
  children: []
  href: CustomProtectedInputStream.yml
  langs:
  - cplusplus
  name: CustomProtectedInputStream.create synchronous
  fullName: msipcthin2.customprotectedinputstream_create_synchronous_method_java
  type: Method
  assemblies: *o0
  namespace: com.microsoft.rightsmanagement
  summary: >+
    Synchronously creates an InputStream for reading protected content.







    Opens the specified serialized policy and creates a protected stream that can be used to decrypt the actual     content. For more information, see the *Remarks* section of this topic.



  remarks: >+
    This method is synchronous as it may require server / client communication. Your app specifies a  current stream offset to *protectedContentLength* where the encrypted content is located in the backing stream.



    If the     range defined by the parameters current stream offset to *protectedContentLength* is not empty (i.e., *protectedContentLength* != 0), it must address an entire segment of encrypted content (i.e. it must start from block     0 (zero) and must have a final block in CBC case, or should be 16 bytes aligned in ECB case).



    If the existing content     ends at the end of the *InputStream*, your app can specify **Long.MAX_VALUE** as *protectedContentLength*.



    The *protectedContentLength* parameter is needed only for the cases when there is a non-encrypted app specific content     after the encrypted content (Multiple segments of protected data). When decrypting it, we need to know where the     encrypted content ends. The *protectedContentLength* parameter is specified in terms of the encrypted content, i.e. it     includes the size of the CBC padding.



    Your app can use @msipcthin2.customprotectedoutputstream_getencryptedcontentlength_method_java to determine     the size of the encrypted content given the size of the original content.



    This method works in a synchronous manner.







  syntax:
    content: public static CustomProtectedInputStream create(                                       UserPolicy userPolicy,                                       InputStream inputStream,                                       long protectedContentLength,                                       Context applicationContext)                             throws ProtectionException
    parameters:
    - id: '*userPolicy*'
      type: '@msipcthin2.userpolicy_class_java'
      description: >+
        The custom protection policy.



    - id: '*inputStream*'
      type: '**InputStream**'
      description: >+
        The input stream with the protected content.



        The next bytes of available data in *inputStream* (i.e., those returned via the next call to inputStream.Read()) should contain the beginning of the stream's protected content.  *inputStream* should have *protectedContentLength* bytes of contiguous protected content available.



    - id: '*protectedContentLength*'
      type: '**long**'
      description: >+
        The underlying length of the protected data contained within the stream.



    - id: '*applicationContext*'
      type: '**Context**'
      description: 
    return:
      type: '@msipcthin2.customprotectedinputstream_class_java'
      description: '@msipcthin2.customprotectedinputstream_class_java'
  inheritance: []
- uid: msipcthin2.customprotectedinputstream_getuserpolicy_method_java
  id: CustomProtectedInputStream.getUserPolicy
  parent: msipcthin2.customprotectedinputstream_class_java
  children: []
  href: CustomProtectedInputStream.yml
  langs:
  - cplusplus
  name: CustomProtectedInputStream.getUserPolicy
  fullName: msipcthin2.customprotectedinputstream_getuserpolicy_method_java
  type: Method
  assemblies: *o0
  namespace: com.microsoft.rightsmanagement
  summary: >+
    Gets the user policy associated with the stream.







  remarks: 
  syntax:
    content: public UserPolicy getUserPolicy()
    return:
      type: '@msipcthin2.userpolicy_class_java'
      description: A @msipcthin2.userpolicy_class_java object that represents the policy.
  inheritance: []
references:
- uid: msipcthin2.customprotectedinputstream_class_java
  href: CustomProtectedInputStream.yml
  name: CustomProtectedInputStream
- uid: InputStream
  isExternal: true
  href: http://developer.android.com/reference/java/io/InputStream.html
  name: InputStream
- uid: msipcthin2.customprotectedinputstream_create_method_java
  href: CustomProtectedInputStream.create.yml
  name: create
- uid: msipcthin2.customprotectedinputstream_getuserpolicy_method_java
  href: CustomProtectedInputStream.getUserPolicy.yml
  name: getUserPolicy
- uid: msipcthin2.android
  name: Android API Reference
- uid: msipcthin2.core_concepts
  name: Developer guidance and terms
- uid: msipcthin2.get_started
  name: Get started
- uid: msipcthin2.customprotectedinputstream_create_synchronous_method_java
  href: CustomProtectedInputStream.create synchronous.yml
  name: CustomProtectedInputStream.create synchronous
